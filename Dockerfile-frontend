FROM node:16-slim as node-builder

WORKDIR /app/

ARG API_DOMAIN_NAME="api.domain.tld"
ENV API_DOMAIN_NAME "${API_DOMAIN_NAME}"

ARG NODE_ENV="production"
ENV NODE_ENV "${NODE_ENV}"

# Copy files for app
COPY . /app/

# Modify the app config to use environment variables
RUN sed -i "s/API_DOMAIN_NAME/$API_DOMAIN_NAME/g" /app/tirith-frontend/src/environments/environment.ts

RUN echo "Installing ng cli..." && \
    npm install -g @angular/cli
RUN echo "Installing npm modules..." && \
    NODE_ENV=development npm install || exit 1 && \
    echo "npm modules installed." && \
    npm cache clean --force

# build and link palantir lib
RUN echo "installing tsc..." && \
    npm install -g typescript
RUN echo "building lib..." && \
    cd ./palantir-db && \
    tsc
RUN echo "linking lib..." && \
    npm link palantir-db -w tirith-frontend

# install over idk
RUN echo "Installing npm modules..." && \
    NODE_ENV=development npm install || exit 1 && \
    echo "npm modules installed." && \
    npm cache clean --force


# Build for production env
RUN echo "Building app...\n" && \
    npm run build || exit 1 && \
    echo "build was completed."

FROM nginx:1.21-alpine as hoster

COPY --from=node-builder /app/tirith-frontend/dist/tirith /usr/share/nginx/html
COPY --from=node-builder /app/tirith-frontend/nginx.conf /etc/nginx/nginx.conf 

EXPOSE 80

CMD ["sh", "-c", "nginx -g 'daemon off;'"]